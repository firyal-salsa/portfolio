{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __asyncValues = this && this.__asyncValues || function (o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator],\n    i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () {\n    return this;\n  }, i);\n  function verb(n) {\n    i[n] = o[n] && function (v) {\n      return new Promise(function (resolve, reject) {\n        v = o[n](v), settle(resolve, reject, v.done, v.value);\n      });\n    };\n  }\n  function settle(resolve, reject, d, v) {\n    Promise.resolve(v).then(function (v) {\n      resolve({\n        value: v,\n        done: d\n      });\n    }, reject);\n  }\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.disconnect = exports.send = exports.addSmokeListener = void 0;\nconst nodemailer_1 = __importDefault(require(\"nodemailer\"));\nconst mail_composer_1 = __importDefault(require(\"nodemailer/lib/mail-composer\"));\nconst url_1 = require(\"url\");\nconst exit_hook_1 = __importDefault(require(\"exit-hook\"));\nfunction createTransport(mailUrl) {\n  const url = new url_1.URL(mailUrl);\n  if (url.protocol !== 'smtp:' && url.protocol !== 'smtps:') {\n    throw new Error(`Email protocol must be smtp or smtps`);\n  }\n  if (url.protocol === 'smtp:' && url.port === '465') {\n    console.warn(`Connecting over a secure port, while using smtp protocol! You probably mean to use smtps:`);\n  }\n  // Allow overriding pool setting, but default to true.\n  if (!url.searchParams.has('pool')) {\n    url.searchParams.set('pool', 'true');\n  }\n  return nodemailer_1.default.createTransport(url.toString());\n}\nconst _transportCache = new Map();\nfunction getTransport() {\n  const url = process.env.MAIL_URL;\n  if (!url) {\n    return null;\n  }\n  if (_transportCache.has(url)) {\n    return _transportCache.get(url);\n  }\n  const transporter = createTransport(url);\n  _transportCache.set(url, transporter);\n  return _transportCache.get(url);\n}\nlet devModeMailId = 0;\nconst listeners = new Set();\nconst addSmokeListener = fn => {\n  listeners.add(fn);\n};\nexports.addSmokeListener = addSmokeListener;\nfunction devModeSend(mail) {\n  var e_1, _a;\n  return __awaiter(this, void 0, void 0, function* () {\n    const messageId = (++devModeMailId).toString().padStart(3, '0');\n    const chunks = [];\n    const stream = new mail_composer_1.default(mail).compile().createReadStream();\n    try {\n      for (var stream_1 = __asyncValues(stream), stream_1_1; stream_1_1 = yield stream_1.next(), !stream_1_1.done;) {\n        const chunk = stream_1_1.value;\n        chunks.push(chunk);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (stream_1_1 && !stream_1_1.done && (_a = stream_1.return)) yield _a.call(stream_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    const content = Buffer.concat(chunks).toString('utf-8');\n    const header = '====== BEGIN MAIL #' + messageId + ' ======';\n    const footer = '====== END MAIL   #' + messageId + ' ======';\n    const output = [header, content, footer].join('\\n');\n    for (const listener of listeners) {\n      listener(output);\n      listeners.delete(listener);\n    }\n    if (process.env.NODE_ENV !== 'test') {\n      console.log(output);\n    }\n    return;\n  });\n}\nfunction send(options) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const transport = getTransport();\n    if (transport) {\n      return transport.sendMail(options);\n    }\n    return devModeSend(options);\n  });\n}\nexports.send = send;\nfunction disconnect() {\n  return __awaiter(this, void 0, void 0, function* () {\n    for (const url of _transportCache.keys()) {\n      const transport = _transportCache.get(url);\n      _transportCache.delete(url);\n      if (transport && typeof transport.close === 'function') {\n        transport.close();\n      }\n    }\n  });\n}\nexports.disconnect = disconnect;\n// graceful shutdown\nexit_hook_1.default(() => disconnect());","map":{"version":3,"mappings":"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","names":["createTransport","mailUrl","url","url_1","protocol","Error","port","console","warn","searchParams","has","set","nodemailer_1","toString","_transportCache","Map","getTransport","process","env","MAIL_URL","get","transporter","devModeMailId","listeners","Set","addSmokeListener","fn","add","exports","devModeSend","mail","messageId","padStart","chunks","stream","mail_composer_1","compile","createReadStream","chunk","push","content","Buffer","concat","header","footer","output","join","listener","delete","NODE_ENV","log","send","options","transport","sendMail","disconnect","keys","close","exit_hook_1"],"sources":["../src/send.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}