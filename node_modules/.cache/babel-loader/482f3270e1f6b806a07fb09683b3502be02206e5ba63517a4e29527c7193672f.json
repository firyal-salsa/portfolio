{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Cell = exports.Row = exports.Grid = void 0;\nconst jsx_runtime_1 = require(\"react/jsx-runtime\");\nconst styles = {\n  table: {\n    width: '100%',\n    borderCollapse: 'collapse'\n  }\n};\nfunction ensureArray(arr) {\n  return Array.isArray(arr) ? arr : [arr].filter(Boolean);\n}\nfunction Cell(_ref) {\n  let {\n    children,\n    style = {},\n    className,\n    colSpan\n  } = _ref;\n  return jsx_runtime_1.jsx(\"td\", Object.assign({\n    colSpan: colSpan,\n    style: style,\n    className: className\n  }, {\n    children: children\n  }), void 0);\n}\nexports.Cell = Cell;\nfunction Row(_ref2) {\n  let {\n    children,\n    style = {}\n  } = _ref2;\n  const content = ensureArray(children).filter(Boolean).map((el, idx, _ref3) => {\n    let {\n      length\n    } = _ref3;\n    if (el.type === Cell) {\n      return el;\n    }\n    return jsx_runtime_1.jsx(Cell, Object.assign({\n      colSpan: length === 1 ? 12 : undefined\n    }, {\n      children: el\n    }), idx);\n  });\n  return jsx_runtime_1.jsx(\"tr\", Object.assign({\n    style: style\n  }, {\n    children: content\n  }), void 0);\n}\nexports.Row = Row;\nfunction Grid(_ref4) {\n  let {\n    children,\n    style = {}\n  } = _ref4;\n  const content = ensureArray(children).filter(Boolean).map((el, idx) => {\n    if (!el) {\n      return null;\n    }\n    // We want this content the be on it's own row.\n    if (el.type === Row) {\n      return el;\n    }\n    // The content is all inside a single cell (so a row)\n    if (el.type === Cell) {\n      return jsx_runtime_1.jsx(Row, {\n        children: el\n      }, idx);\n    }\n    // The content is one cell inside it's own row\n    return jsx_runtime_1.jsx(Row, {\n      children: jsx_runtime_1.jsx(Cell, Object.assign({\n        colSpan: 12\n      }, {\n        children: el\n      }), void 0)\n    }, idx);\n  }).filter(Boolean);\n  return jsx_runtime_1.jsx(\"table\", Object.assign({\n    cellPadding: 0,\n    cellSpacing: 0,\n    style: Object.assign(Object.assign({}, styles.table), style)\n  }, {\n    children: jsx_runtime_1.jsx(\"tbody\", {\n      children: content\n    }, void 0)\n  }), void 0);\n}\nexports.Grid = Grid;\nGrid.Row = Row;\nGrid.Cell = Cell;","map":{"version":3,"mappings":";;;;;;;AAEA,MAAMA,MAAM,GAAkC;EAC5CC,KAAK,EAAE;IACLC,KAAK,EAAE,MAAM;IACbC,cAAc,EAAE;;CAEnB;AAED,SAASC,WAAW,CAACC,GAAG;EACtB,OAAOC,KAAK,CAACC,OAAO,CAACF,GAAG,CAAC,GAAGA,GAAG,GAAG,CAACA,GAAG,CAAC,CAACG,MAAM,CAACC,OAAO,CAAC;AACzD;AASA,SAASC,IAAI,OAAwD;EAAA,IAAvD;IAAEC,QAAQ;IAAEC,KAAK,GAAG,EAAE;IAAEC,SAAS;IAAEC;EAAO,CAAa;EACnE,OACEC;IAAID,OAAO,EAAEA,OAAO;IAAEF,KAAK,EAAEA,KAAK;IAAEC,SAAS,EAAEA;EAAS;IAAAF,UACrDA;EAAQ,WACN;AAET;AA6DoBK;AA3DpB,SAASC,GAAG,QAAyB;EAAA,IAAxB;IAAEN,QAAQ;IAAEC,KAAK,GAAG;EAAE,CAAE;EACnC,MAAMM,OAAO,GAAGd,WAAW,CAACO,QAAQ,CAAC,CAClCH,MAAM,CAACC,OAAO,CAAC,CACfU,GAAG,CAAC,CAACC,EAAE,EAAEC,GAAG,YAAgB;IAAA,IAAd;MAAEC;IAAM,CAAE;IACvB,IAAIF,EAAE,CAACG,IAAI,KAAKb,IAAI,EAAE;MACpB,OAAOU,EAAE;;IAGX,OACEL,kBAACL,IAAI;MAAWI,OAAO,EAAEQ,MAAM,KAAK,CAAC,GAAG,EAAE,GAAGE;IAAS;MAAAb,UACnDS;IAAE,IADMC,GAAG,CAEP;EAEX,CAAC,CAAC;EAEJ,OAAON;IAAIH,KAAK,EAAEA;EAAK;IAAAD,UAAGO;EAAO,WAAM;AACzC;AA2CeF;AAzCf,SAASS,IAAI,QAAyB;EAAA,IAAxB;IAAEd,QAAQ;IAAEC,KAAK,GAAG;EAAE,CAAE;EACpC,MAAMM,OAAO,GAAGd,WAAW,CAACO,QAAQ,CAAC,CAClCH,MAAM,CAACC,OAAO,CAAC,CACfU,GAAG,CAAC,CAACC,EAAE,EAAEC,GAAG,KAAI;IACf,IAAI,CAACD,EAAE,EAAE;MACP,OAAO,IAAI;;IAGb;IACA,IAAIA,EAAE,CAACG,IAAI,KAAKN,GAAG,EAAE;MACnB,OAAOG,EAAE;;IAGX;IACA,IAAIA,EAAE,CAACG,IAAI,KAAKb,IAAI,EAAE;MACpB,OAAOK,kBAACE,GAAG;QAAAN,UAAYS;MAAE,GAARC,GAAG,CAAY;;IAGlC;IACA,OACEN,kBAACE,GAAG;MAAAN,UACFI,kBAACL,IAAI;QAACI,OAAO,EAAE;MAAE;QAAAH,UAAGS;MAAE;IAAQ,GADtBC,GAAG,CAEP;EAEV,CAAC,CAAC,CACDb,MAAM,CAACC,OAAO,CAAC;EAElB,OACEM;IACEW,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,CAAC;IACdf,KAAK,kCAAOZ,MAAM,CAACC,KAAK,GAAKW,KAAK;EAAA;IAAAD,UAElCI;MAAAJ,UAAQO;IAAO;EAAS,WAClB;AAEZ;AAKSF;AAHTS,IAAI,CAACR,GAAG,GAAGA,GAAG;AACdQ,IAAI,CAACf,IAAI,GAAGA,IAAI","names":["styles","table","width","borderCollapse","ensureArray","arr","Array","isArray","filter","Boolean","Cell","children","style","className","colSpan","jsx_runtime_1","exports","Row","content","map","el","idx","length","type","undefined","Grid","cellPadding","cellSpacing"],"sources":["../../src/templates/Layout.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}